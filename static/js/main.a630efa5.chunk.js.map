{"version":3,"sources":["components/Statistics/statistics.module.scss","components/FeedbackOption/fedbackOption.module.scss","components/Section/section.module.scss","components/Card/card.module.scss","components/FeedbackOption/index.js","components/Section/index.js","components/Statistics/index.js","components/Notification/index.js","components/Card/index.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","FeedbackOptions","this","props","onLeaveFeedback","options","good","neutral","bad","className","styles","wrapper","value","onClick","Component","Section","children","title","Statistics","total","positivePercentage","list","Notification","message","Card","App","state","handleFeedback","e","changed","JSON","parse","target","key","Object","hasOwnProperty","call","setState","prevState","countTotalFeedback","Math","floor","FeedbackOption","countPositiveFeedbackPercentage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a630efa5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"statistics_list__1dX3a\",\"value\":\"statistics_value__i5riE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"fedbackOption_wrapper__3vYnu\",\"good\":\"fedbackOption_good__ZdazN\",\"neutral\":\"fedbackOption_neutral__1JxUW\",\"bad\":\"fedbackOption_bad__iosc4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"section_title__jUxtq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"card_wrapper__LtIdC\"};","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './fedbackOption.module.scss';\r\n\r\nclass FeedbackOptions extends Component {\r\n  render() {\r\n    const {\r\n      onLeaveFeedback,\r\n      options: { good, neutral, bad },\r\n    } = this.props;\r\n    return (\r\n      <div className={styles.wrapper}>\r\n        <button\r\n          className={styles.good}\r\n          value={`{\"good\": ${good}}`}\r\n          onClick={onLeaveFeedback}\r\n        >\r\n          Good\r\n        </button>\r\n        <button\r\n          className={styles.neutral}\r\n          value={`{\"neutral\": ${neutral}}`}\r\n          onClick={onLeaveFeedback}\r\n        >\r\n          Neutral\r\n        </button>\r\n        <button\r\n          className={styles.bad}\r\n          value={`{\"bad\": ${bad}}`}\r\n          onClick={onLeaveFeedback}\r\n        >\r\n          Bad\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n  options: PropTypes.exact({\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './section.module.scss';\r\n\r\nclass Section extends Component {\r\n  render() {\r\n    const { children, title } = this.props;\r\n    return (\r\n      <section>\r\n        <h2 className={styles.title}>{title}</h2>\r\n        {children}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './statistics.module.scss';\r\n\r\nclass Statistics extends Component {\r\n  render() {\r\n    const { good, neutral, bad, total, positivePercentage } = this.props;\r\n    return (\r\n      <ul className={styles.list}>\r\n        <li>\r\n          Good: <span className={styles.value}>{good}</span>\r\n        </li>\r\n        <li>\r\n          Neutral: <span className={styles.value}>{neutral}</span>\r\n        </li>\r\n        <li>\r\n          Bad: <span className={styles.value}>{bad}</span>\r\n        </li>\r\n        <li>\r\n          Total: <span className={styles.value}>{total}</span>\r\n        </li>\r\n        <li>\r\n          Positive feedback:{' '}\r\n          <span className={styles.value}>{positivePercentage}%</span>\r\n        </li>\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Notification extends Component {\r\n  render() {\r\n    const { message } = this.props;\r\n    return <p>{message}</p>;\r\n  }\r\n}\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import styles from './card.module.scss';\r\n\r\nconst Card = ({ children }) => {\r\n  return <div className={styles.wrapper}>{children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","import React, { Component } from 'react';\r\nimport FeedbackOptions from './components/FeedbackOption';\r\nimport Section from './components/Section';\r\nimport Statistics from './components/Statistics';\r\nimport Notification from './components/Notification';\r\nimport Card from './components/Card';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n  countTotalFeedback() {\r\n    const { good, neutral, bad } = this.state;\r\n\r\n    return bad + good + neutral;\r\n  }\r\n  countPositiveFeedbackPercentage() {\r\n    const { good } = this.state;\r\n    const total = this.countTotalFeedback();\r\n\r\n    return total === 0 ? 0 : Math.floor((good / total) * 100);\r\n  }\r\n  handleFeedback = e => {\r\n    const changed = JSON.parse(e.target.value);\r\n    for (const key in changed) {\r\n      if (Object.hasOwnProperty.call(changed, key)) {\r\n        changed[key] += 1;\r\n      }\r\n    }\r\n    this.setState(prevState => {\r\n      const nextState = { ...prevState, ...changed };\r\n\r\n      return nextState;\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <Card>\r\n        <Section title=\"Please leave feedback\">\r\n          <FeedbackOptions\r\n            options={this.state}\r\n            onLeaveFeedback={this.handleFeedback}\r\n          />\r\n        </Section>\r\n        <Section title=\"Statistics\">\r\n          {this.countTotalFeedback() === 0 ? (\r\n            <Notification message=\"No feedback given\" />\r\n          ) : (\r\n            <Statistics\r\n              good={this.state.good}\r\n              neutral={this.state.neutral}\r\n              bad={this.state.bad}\r\n              total={this.countTotalFeedback()}\r\n              positivePercentage={this.countPositiveFeedbackPercentage()}\r\n            />\r\n          )}\r\n        </Section>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './scss/index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}