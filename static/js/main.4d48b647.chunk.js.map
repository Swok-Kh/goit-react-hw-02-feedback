{"version":3,"sources":["components/Statistics/statistics.module.scss","components/FeedbackOption/fedbackOption.module.scss","components/Section/section.module.scss","components/Card/card.module.scss","components/FeedbackOption/index.js","components/Section/index.js","components/Statistics/index.js","components/Notification/index.js","components/Card/index.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","FeedbackOptions","onLeaveFeedback","this","props","className","styles","wrapper","good","data-btn-type","onClick","neutral","bad","Component","Section","children","title","Statistics","total","positivePercentage","list","value","Notification","message","Card","App","state","handleFeedback","e","includes","target","dataset","btnType","setState","countTotalFeedback","Math","floor","FeedbackOption","countPositiveFeedbackPercentage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4d48b647.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"statistics_list__1dX3a\",\"value\":\"statistics_value__i5riE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"fedbackOption_wrapper__3vYnu\",\"good\":\"fedbackOption_good__ZdazN\",\"neutral\":\"fedbackOption_neutral__1JxUW\",\"bad\":\"fedbackOption_bad__iosc4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"section_title__jUxtq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"card_wrapper__LtIdC\"};","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './fedbackOption.module.scss';\r\n\r\nclass FeedbackOptions extends Component {\r\n  render() {\r\n    const { onLeaveFeedback } = this.props;\r\n    return (\r\n      <div className={styles.wrapper}>\r\n        <button\r\n          className={styles.good}\r\n          data-btn-type=\"good\"\r\n          onClick={onLeaveFeedback}\r\n        >\r\n          Good\r\n        </button>\r\n        <button\r\n          className={styles.neutral}\r\n          data-btn-type=\"neutral\"\r\n          onClick={onLeaveFeedback}\r\n        >\r\n          Neutral\r\n        </button>\r\n        <button\r\n          className={styles.bad}\r\n          data-btn-type=\"bad\"\r\n          onClick={onLeaveFeedback}\r\n        >\r\n          Bad\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './section.module.scss';\r\n\r\nclass Section extends Component {\r\n  render() {\r\n    const { children, title } = this.props;\r\n    return (\r\n      <section>\r\n        <h2 className={styles.title}>{title}</h2>\r\n        {children}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './statistics.module.scss';\r\n\r\nclass Statistics extends Component {\r\n  render() {\r\n    const { good, neutral, bad, total, positivePercentage } = this.props;\r\n    return (\r\n      <ul className={styles.list}>\r\n        <li>\r\n          Good: <span className={styles.value}>{good}</span>\r\n        </li>\r\n        <li>\r\n          Neutral: <span className={styles.value}>{neutral}</span>\r\n        </li>\r\n        <li>\r\n          Bad: <span className={styles.value}>{bad}</span>\r\n        </li>\r\n        <li>\r\n          Total: <span className={styles.value}>{total}</span>\r\n        </li>\r\n        <li>\r\n          Positive feedback:{' '}\r\n          <span className={styles.value}>{positivePercentage}%</span>\r\n        </li>\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Notification extends Component {\r\n  render() {\r\n    const { message } = this.props;\r\n    return <p>{message}</p>;\r\n  }\r\n}\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import styles from './card.module.scss';\r\n\r\nconst Card = ({ children }) => {\r\n  return <div className={styles.wrapper}>{children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","import React, { Component } from 'react';\nimport FeedbackOptions from './components/FeedbackOption';\nimport Section from './components/Section';\nimport Statistics from './components/Statistics';\nimport Notification from './components/Notification';\nimport Card from './components/Card';\n// import PropTypes from 'prop-types';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n  countTotalFeedback() {\n    return this.state.bad + this.state.good + this.state.neutral;\n  }\n  countPositiveFeedbackPercentage() {\n    return this.countTotalFeedback() === 0\n      ? 0\n      : Math.floor((this.state.good / this.countTotalFeedback()) * 100);\n  }\n  handleFeedback = e => {\n    if (['good', 'neutral', 'bad'].includes(e.target.dataset.btnType))\n      this.setState({\n        [e.target.dataset.btnType]:\n          this.state[`${e.target.dataset.btnType}`] + 1,\n      });\n  };\n  render() {\n    return (\n      <Card>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions onLeaveFeedback={this.handleFeedback} />\n        </Section>\n        <Section title=\"Statistics\">\n          {this.countTotalFeedback() === 0 ? (\n            <Notification message=\"No feedback given\" />\n          ) : (\n            <Statistics\n              good={this.state.good}\n              neutral={this.state.neutral}\n              bad={this.state.bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          )}\n        </Section>\n      </Card>\n    );\n  }\n}\n\nApp.propTypes = {};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './scss/index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}